// Code generated by MockGen. DO NOT EDIT.
// Source: rhombic/acl/ports/clients/space.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	vo "user-context/rhombic/domain/space/vo"

	gomock "github.com/golang/mock/gomock"
)

// MockSpaceClient is a mock of SpaceClient interface.
type MockSpaceClient struct {
	ctrl     *gomock.Controller
	recorder *MockSpaceClientMockRecorder
}

// MockSpaceClientMockRecorder is the mock recorder for MockSpaceClient.
type MockSpaceClientMockRecorder struct {
	mock *MockSpaceClient
}

// NewMockSpaceClient creates a new mock instance.
func NewMockSpaceClient(ctrl *gomock.Controller) *MockSpaceClient {
	mock := &MockSpaceClient{ctrl: ctrl}
	mock.recorder = &MockSpaceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpaceClient) EXPECT() *MockSpaceClientMockRecorder {
	return m.recorder
}

// GetList mocks base method.
func (m *MockSpaceClient) GetList(organizationID string) []vo.ValueObject {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetList", organizationID)
	ret0, _ := ret[0].([]vo.ValueObject)
	return ret0
}

// GetList indicates an expected call of GetList.
func (mr *MockSpaceClientMockRecorder) GetList(organizationID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockSpaceClient)(nil).GetList), organizationID)
}
